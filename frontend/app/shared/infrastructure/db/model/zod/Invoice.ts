// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";
import { type CustomerId, customerId } from "./Customer";

/** Identifier type for invoice */
export type InvoiceId = number & { __flavor?: "InvoiceId" };

/** Represents the table chinook.invoice */
export interface Invoice {
	/** Database type: pg_catalog.int4 */
	invoiceId: InvoiceId;

	/** Database type: pg_catalog.int4 */
	customerId: CustomerId;

	/** Database type: pg_catalog.timestamp */
	invoiceDate: Date;

	/** Database type: pg_catalog.varchar */
	billingAddress: string | null;

	/** Database type: pg_catalog.varchar */
	billingCity: string | null;

	/** Database type: pg_catalog.varchar */
	billingState: string | null;

	/** Database type: pg_catalog.varchar */
	billingCountry: string | null;

	/** Database type: pg_catalog.varchar */
	billingPostalCode: string | null;

	/** Database type: pg_catalog.numeric */
	total: string;
}

/** Represents the initializer for the table chinook.invoice */
export interface InvoiceInitializer {
	/**
	 * Database type: pg_catalog.int4
	 * Default value: nextval('invoice_invoice_id_seq'::regclass)
	 */
	invoiceId?: InvoiceId;

	/** Database type: pg_catalog.int4 */
	customerId: CustomerId;

	/** Database type: pg_catalog.timestamp */
	invoiceDate: Date;

	/** Database type: pg_catalog.varchar */
	billingAddress?: string | null;

	/** Database type: pg_catalog.varchar */
	billingCity?: string | null;

	/** Database type: pg_catalog.varchar */
	billingState?: string | null;

	/** Database type: pg_catalog.varchar */
	billingCountry?: string | null;

	/** Database type: pg_catalog.varchar */
	billingPostalCode?: string | null;

	/** Database type: pg_catalog.numeric */
	total: string;
}

/** Represents the mutator for the table chinook.invoice */
export interface InvoiceMutator {
	/** Database type: pg_catalog.int4 */
	invoiceId?: InvoiceId;

	/** Database type: pg_catalog.int4 */
	customerId?: CustomerId;

	/** Database type: pg_catalog.timestamp */
	invoiceDate?: Date;

	/** Database type: pg_catalog.varchar */
	billingAddress?: string | null;

	/** Database type: pg_catalog.varchar */
	billingCity?: string | null;

	/** Database type: pg_catalog.varchar */
	billingState?: string | null;

	/** Database type: pg_catalog.varchar */
	billingCountry?: string | null;

	/** Database type: pg_catalog.varchar */
	billingPostalCode?: string | null;

	/** Database type: pg_catalog.numeric */
	total?: string;
}

export const invoiceId = z.number() as unknown as z.Schema<InvoiceId>;

export const invoice = z.object({
	invoiceId: invoiceId,
	customerId: customerId,
	invoiceDate: z.date(),
	billingAddress: z.string().nullable(),
	billingCity: z.string().nullable(),
	billingState: z.string().nullable(),
	billingCountry: z.string().nullable(),
	billingPostalCode: z.string().nullable(),
	total: z.string(),
}) as unknown as z.Schema<Invoice>;

export const invoiceInitializer = z.object({
	invoiceId: invoiceId.optional(),
	customerId: customerId,
	invoiceDate: z.date(),
	billingAddress: z.string().optional().nullable(),
	billingCity: z.string().optional().nullable(),
	billingState: z.string().optional().nullable(),
	billingCountry: z.string().optional().nullable(),
	billingPostalCode: z.string().optional().nullable(),
	total: z.string(),
}) as unknown as z.Schema<InvoiceInitializer>;

export const invoiceMutator = z.object({
	invoiceId: invoiceId.optional(),
	customerId: customerId.optional(),
	invoiceDate: z.date().optional(),
	billingAddress: z.string().optional().nullable(),
	billingCity: z.string().optional().nullable(),
	billingState: z.string().optional().nullable(),
	billingCountry: z.string().optional().nullable(),
	billingPostalCode: z.string().optional().nullable(),
	total: z.string().optional(),
}) as unknown as z.Schema<InvoiceMutator>;
