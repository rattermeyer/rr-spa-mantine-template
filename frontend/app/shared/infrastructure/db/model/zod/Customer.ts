// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";
import { type EmployeeId, employeeId } from "./Employee";

/** Identifier type for customer */
export type CustomerId = number & { __flavor?: "CustomerId" };

/** Represents the table chinook.customer */
export interface Customer {
	/** Database type: pg_catalog.int4 */
	customerId: CustomerId;

	/** Database type: pg_catalog.varchar */
	firstName: string;

	/** Database type: pg_catalog.varchar */
	lastName: string;

	/** Database type: pg_catalog.varchar */
	company: string | null;

	/** Database type: pg_catalog.varchar */
	address: string | null;

	/** Database type: pg_catalog.varchar */
	city: string | null;

	/** Database type: pg_catalog.varchar */
	state: string | null;

	/** Database type: pg_catalog.varchar */
	country: string | null;

	/** Database type: pg_catalog.varchar */
	postalCode: string | null;

	/** Database type: pg_catalog.varchar */
	phone: string | null;

	/** Database type: pg_catalog.varchar */
	fax: string | null;

	/** Database type: pg_catalog.varchar */
	email: string;

	/** Database type: pg_catalog.int4 */
	supportRepId: EmployeeId | null;
}

/** Represents the initializer for the table chinook.customer */
export interface CustomerInitializer {
	/**
	 * Database type: pg_catalog.int4
	 * Default value: nextval('customer_customer_id_seq'::regclass)
	 */
	customerId?: CustomerId;

	/** Database type: pg_catalog.varchar */
	firstName: string;

	/** Database type: pg_catalog.varchar */
	lastName: string;

	/** Database type: pg_catalog.varchar */
	company?: string | null;

	/** Database type: pg_catalog.varchar */
	address?: string | null;

	/** Database type: pg_catalog.varchar */
	city?: string | null;

	/** Database type: pg_catalog.varchar */
	state?: string | null;

	/** Database type: pg_catalog.varchar */
	country?: string | null;

	/** Database type: pg_catalog.varchar */
	postalCode?: string | null;

	/** Database type: pg_catalog.varchar */
	phone?: string | null;

	/** Database type: pg_catalog.varchar */
	fax?: string | null;

	/** Database type: pg_catalog.varchar */
	email: string;

	/** Database type: pg_catalog.int4 */
	supportRepId?: EmployeeId | null;
}

/** Represents the mutator for the table chinook.customer */
export interface CustomerMutator {
	/** Database type: pg_catalog.int4 */
	customerId?: CustomerId;

	/** Database type: pg_catalog.varchar */
	firstName?: string;

	/** Database type: pg_catalog.varchar */
	lastName?: string;

	/** Database type: pg_catalog.varchar */
	company?: string | null;

	/** Database type: pg_catalog.varchar */
	address?: string | null;

	/** Database type: pg_catalog.varchar */
	city?: string | null;

	/** Database type: pg_catalog.varchar */
	state?: string | null;

	/** Database type: pg_catalog.varchar */
	country?: string | null;

	/** Database type: pg_catalog.varchar */
	postalCode?: string | null;

	/** Database type: pg_catalog.varchar */
	phone?: string | null;

	/** Database type: pg_catalog.varchar */
	fax?: string | null;

	/** Database type: pg_catalog.varchar */
	email?: string;

	/** Database type: pg_catalog.int4 */
	supportRepId?: EmployeeId | null;
}

export const customerId = z.number() as unknown as z.Schema<CustomerId>;

export const customer = z.object({
	customerId: customerId,
	firstName: z.string(),
	lastName: z.string(),
	company: z.string().nullable(),
	address: z.string().nullable(),
	city: z.string().nullable(),
	state: z.string().nullable(),
	country: z.string().nullable(),
	postalCode: z.string().nullable(),
	phone: z.string().nullable(),
	fax: z.string().nullable(),
	email: z.string(),
	supportRepId: employeeId.nullable(),
}) as unknown as z.Schema<Customer>;

export const customerInitializer = z.object({
	customerId: customerId.optional(),
	firstName: z.string(),
	lastName: z.string(),
	company: z.string().optional().nullable(),
	address: z.string().optional().nullable(),
	city: z.string().optional().nullable(),
	state: z.string().optional().nullable(),
	country: z.string().optional().nullable(),
	postalCode: z.string().optional().nullable(),
	phone: z.string().optional().nullable(),
	fax: z.string().optional().nullable(),
	email: z.string(),
	supportRepId: employeeId.optional().nullable(),
}) as unknown as z.Schema<CustomerInitializer>;

export const customerMutator = z.object({
	customerId: customerId.optional(),
	firstName: z.string().optional(),
	lastName: z.string().optional(),
	company: z.string().optional().nullable(),
	address: z.string().optional().nullable(),
	city: z.string().optional().nullable(),
	state: z.string().optional().nullable(),
	country: z.string().optional().nullable(),
	postalCode: z.string().optional().nullable(),
	phone: z.string().optional().nullable(),
	fax: z.string().optional().nullable(),
	email: z.string().optional(),
	supportRepId: employeeId.optional().nullable(),
}) as unknown as z.Schema<CustomerMutator>;
