// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";

/** Identifier type for artist */
export type ArtistId = number & { __flavor?: "ArtistId" };

/** Represents the table chinook.artist */
export interface Artist {
	/** Database type: pg_catalog.int4 */
	artistId: ArtistId;

	/** Database type: pg_catalog.varchar */
	name: string | null;
}

/** Represents the initializer for the table chinook.artist */
export interface ArtistInitializer {
	/**
	 * Database type: pg_catalog.int4
	 * Default value: nextval('artist_artist_id_seq'::regclass)
	 */
	artistId?: ArtistId;

	/** Database type: pg_catalog.varchar */
	name?: string | null;
}

/** Represents the mutator for the table chinook.artist */
export interface ArtistMutator {
	/** Database type: pg_catalog.int4 */
	artistId?: ArtistId;

	/** Database type: pg_catalog.varchar */
	name?: string | null;
}

export const artistId = z.number() as unknown as z.Schema<ArtistId>;

export const artist = z.object({
	artistId: artistId,
	name: z.string().nullable(),
}) as unknown as z.Schema<Artist>;

export const artistInitializer = z.object({
	artistId: artistId.optional(),
	name: z.string().optional().nullable(),
}) as unknown as z.Schema<ArtistInitializer>;

export const artistMutator = z.object({
	artistId: artistId.optional(),
	name: z.string().optional().nullable(),
}) as unknown as z.Schema<ArtistMutator>;
