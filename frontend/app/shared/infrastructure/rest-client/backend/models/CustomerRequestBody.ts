/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomerRequestBody
 */
export interface CustomerRequestBody {
    /**
     * 
     * @type {number}
     * @memberof CustomerRequestBody
     */
    customerId?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    company?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerRequestBody
     */
    fax?: string;
}

/**
 * Check if a given object implements the CustomerRequestBody interface.
 */
export function instanceOfCustomerRequestBody(value: object): value is CustomerRequestBody {
    return true;
}

export function CustomerRequestBodyFromJSON(json: any): CustomerRequestBody {
    return CustomerRequestBodyFromJSONTyped(json, false);
}

export function CustomerRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerRequestBody {
    if (json == null) {
        return json;
    }
    return {
        
        'customerId': json['customerId'] == null ? undefined : json['customerId'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'address': json['address'] == null ? undefined : json['address'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'country': json['country'] == null ? undefined : json['country'],
        'company': json['company'] == null ? undefined : json['company'],
        'postalCode': json['postalCode'] == null ? undefined : json['postalCode'],
        'fax': json['fax'] == null ? undefined : json['fax'],
    };
}

export function CustomerRequestBodyToJSON(json: any): CustomerRequestBody {
    return CustomerRequestBodyToJSONTyped(json, false);
}

export function CustomerRequestBodyToJSONTyped(value?: CustomerRequestBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'customerId': value['customerId'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'phone': value['phone'],
        'address': value['address'],
        'city': value['city'],
        'state': value['state'],
        'country': value['country'],
        'company': value['company'],
        'postalCode': value['postalCode'],
        'fax': value['fax'],
    };
}

