/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * 
 * @export
 * @interface EntityModelCustomer
 */
export interface EntityModelCustomer {
    /**
     * 
     * @type {number}
     * @memberof EntityModelCustomer
     */
    customerId?: number;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    company?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelCustomer
     */
    fax?: string;
    /**
     * 
     * @type {{ [key: string]: Link; }}
     * @memberof EntityModelCustomer
     */
    links?: { [key: string]: Link; };
}

/**
 * Check if a given object implements the EntityModelCustomer interface.
 */
export function instanceOfEntityModelCustomer(value: object): value is EntityModelCustomer {
    return true;
}

export function EntityModelCustomerFromJSON(json: any): EntityModelCustomer {
    return EntityModelCustomerFromJSONTyped(json, false);
}

export function EntityModelCustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityModelCustomer {
    if (json == null) {
        return json;
    }
    return {
        
        'customerId': json['customerId'] == null ? undefined : json['customerId'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'address': json['address'] == null ? undefined : json['address'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'country': json['country'] == null ? undefined : json['country'],
        'company': json['company'] == null ? undefined : json['company'],
        'postalCode': json['postalCode'] == null ? undefined : json['postalCode'],
        'fax': json['fax'] == null ? undefined : json['fax'],
        'links': json['_links'] == null ? undefined : (mapValues(json['_links'], LinkFromJSON)),
    };
}

export function EntityModelCustomerToJSON(json: any): EntityModelCustomer {
    return EntityModelCustomerToJSONTyped(json, false);
}

export function EntityModelCustomerToJSONTyped(value?: EntityModelCustomer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'customerId': value['customerId'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'phone': value['phone'],
        'address': value['address'],
        'city': value['city'],
        'state': value['state'],
        'country': value['country'],
        'company': value['company'],
        'postalCode': value['postalCode'],
        'fax': value['fax'],
        '_links': value['links'] == null ? undefined : (mapValues(value['links'], LinkToJSON)),
    };
}

