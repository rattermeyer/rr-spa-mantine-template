/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AbstractJsonSchemaPropertyObject } from './AbstractJsonSchemaPropertyObject';
import {
    AbstractJsonSchemaPropertyObjectFromJSON,
    AbstractJsonSchemaPropertyObjectFromJSONTyped,
    AbstractJsonSchemaPropertyObjectToJSON,
    AbstractJsonSchemaPropertyObjectToJSONTyped,
} from './AbstractJsonSchemaPropertyObject';

/**
 * 
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    type?: string;
    /**
     * 
     * @type {{ [key: string]: AbstractJsonSchemaPropertyObject; }}
     * @memberof Item
     */
    properties?: { [key: string]: AbstractJsonSchemaPropertyObject; };
    /**
     * 
     * @type {Array<string>}
     * @memberof Item
     */
    requiredProperties?: Array<string>;
}

/**
 * Check if a given object implements the Item interface.
 */
export function instanceOfItem(value: object): value is Item {
    return true;
}

export function ItemFromJSON(json: any): Item {
    return ItemFromJSONTyped(json, false);
}

export function ItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Item {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'properties': json['properties'] == null ? undefined : (mapValues(json['properties'], AbstractJsonSchemaPropertyObjectFromJSON)),
        'requiredProperties': json['requiredProperties'] == null ? undefined : json['requiredProperties'],
    };
}

export function ItemToJSON(json: any): Item {
    return ItemToJSONTyped(json, false);
}

export function ItemToJSONTyped(value?: Item | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'properties': value['properties'] == null ? undefined : (mapValues(value['properties'], AbstractJsonSchemaPropertyObjectToJSON)),
        'requiredProperties': value['requiredProperties'],
    };
}

